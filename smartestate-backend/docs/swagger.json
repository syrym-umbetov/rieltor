{
    "swagger": "2.0",
    "info": {
        "description": "AI-powered Real Estate Platform API for Kazakhstan",
        "title": "SmartEstate API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.smartestate.kz/support",
            "email": "support@smartestate.kz"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/analytics/campaigns/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить аналитику по рекламной кампании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Аналитика рекламной кампании",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID кампании",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Метрики кампании",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения аналитики",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/analytics/market-trends": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить тренды рынка недвижимости по городу и типу недвижимости",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Тренды рынка",
                "parameters": [
                    {
                        "enum": [
                            "almaty",
                            "astana",
                            "shymkent"
                        ],
                        "type": "string",
                        "default": "almaty",
                        "description": "Город",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "apartment",
                            "house",
                            "commercial",
                            "land"
                        ],
                        "type": "string",
                        "default": "apartment",
                        "description": "Тип недвижимости",
                        "name": "property_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Рыночные тренды и статистика",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка получения трендов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/analytics/properties/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить аналитику по конкретному объекту недвижимости",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Аналитика недвижимости",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID недвижимости",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "\"30 дней назад\"",
                        "description": "Начальная дата (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"сегодня\"",
                        "description": "Конечная дата (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Аналитические данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения аналитики",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful with tokens and user info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout the current user (invalidates token in production)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.User"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Get a new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Missing refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully with tokens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/chat/messages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Отправить сообщение в чат и получить ответ от AI ассистента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Отправить сообщение",
                "parameters": [
                    {
                        "description": "Данные сообщения",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.MessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ответ AI ассистента",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.ChatMessage"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка обработки сообщения",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chat/sessions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создать новую сессию чата с AI ассистентом",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Создать чат-сессию",
                "responses": {
                    "201": {
                        "description": "Созданная сессия",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.ChatSession"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chat/sessions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить информацию о конкретной сессии чата",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Получить чат-сессию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID сессии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о сессии",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.ChatSession"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chat/sessions/{id}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить все сообщения из чат-сессии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Получить сообщения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID сессии",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сообщений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smartestate_internal_models.ChatMessage"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Сессия не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения сообщений",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/parser/properties": {
            "post": {
                "description": "Парсит недвижимость с сайта krisha.kz используя Selenium по заданным фильтрам. Поддерживает все основные фильтры для поиска квартир, домов и коммерческой недвижимости.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parser"
                ],
                "summary": "Парсинг недвижимости по фильтрам",
                "parameters": [
                    {
                        "description": "Параметры парсинга с фильтрами и количеством страниц",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ParsePropertiesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный парсинг",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ParseResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера или парсинга",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parser/requests/{id}": {
            "get": {
                "description": "Получает детальную информацию о запросе парсинга по уникальному ID, включая статус, результаты и ошибки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parser"
                ],
                "summary": "Получить информацию о запросе парсинга",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID идентификатор запроса парсинга",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о запросе парсинга",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.ParseRequest"
                        }
                    },
                    "400": {
                        "description": "Некорректный формат ID",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Запрос парсинга не найден",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parser/test": {
            "get": {
                "description": "Выполняет быстрый тестовый парсинг с базовыми фильтрами для демонстрации работы системы. Парсит только одну страницу результатов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parser"
                ],
                "summary": "Тестовый парсинг недвижимости",
                "parameters": [
                    {
                        "enum": [
                            "Алматы",
                            "Нур-Султан",
                            "Шымкент"
                        ],
                        "type": "string",
                        "default": "\"Алматы\"",
                        "description": "Город для поиска",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer",
                        "default": 2,
                        "description": "Количество комнат",
                        "name": "rooms",
                        "in": "query"
                    },
                    {
                        "minimum": 1000000,
                        "type": "integer",
                        "default": 50000000,
                        "description": "Максимальная цена в тенге",
                        "name": "max_price",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Результаты тестового парсинга",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ParseResponseSwagger"
                        }
                    },
                    "500": {
                        "description": "Ошибка при выполнении тестового парсинга",
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/properties": {
            "get": {
                "description": "Get paginated list of properties with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "List properties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City filter",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Property type filter",
                        "name": "property_type",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum price",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum price",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of rooms",
                        "name": "rooms",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Properties list with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new property listing (requires authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Create property",
                "parameters": [
                    {
                        "description": "Property data",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Property"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created property",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Property"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/properties/recommendations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get AI-powered property recommendations based on user history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get property recommendations",
                "responses": {
                    "200": {
                        "description": "Recommended properties",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smartestate_internal_models.Property"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/properties/search": {
            "get": {
                "description": "AI-powered property search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Search properties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smartestate_internal_models.Property"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/properties/{id}": {
            "get": {
                "description": "Get detailed information about a property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Get property by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property details",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Property"
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing property (requires ownership)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Update property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated property data",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Property"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a property listing (requires ownership)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Delete property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/properties/{id}/images": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload images for a property listing",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Upload property images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Property images",
                        "name": "images",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Uploaded image URLs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/properties/{id}/view": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Record that a user viewed a property (for analytics)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Properties"
                ],
                "summary": "Record property view",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/targeting/campaigns": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить список всех рекламных кампаний пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targeting"
                ],
                "summary": "Список кампаний",
                "responses": {
                    "200": {
                        "description": "Список кампаний",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/smartestate_internal_models.Campaign"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения кампаний",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создать новую таргетированную рекламную кампанию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targeting"
                ],
                "summary": "Создать рекламную кампанию",
                "parameters": [
                    {
                        "description": "Данные кампании",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Campaign"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная кампания",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Campaign"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка создания кампании",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/targeting/campaigns/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить детальную информацию о рекламной кампании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targeting"
                ],
                "summary": "Получить кампанию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID кампании",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о кампании",
                        "schema": {
                            "$ref": "#/definitions/smartestate_internal_models.Campaign"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Кампания не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/targeting/campaigns/{id}/launch": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Запустить рекламную кампанию на выбранных площадках",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targeting"
                ],
                "summary": "Запустить кампанию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID кампании",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Кампания успешно запущена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Кампания не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка запуска кампании",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/targeting/campaigns/{id}/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получить метрики и статистику рекламной кампании",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targeting"
                ],
                "summary": "Метрики кампании",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID кампании",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Метрики кампании",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Кампания не найдена",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения метрик",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/targeting/generate-creatives": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Генерировать рекламные креативы с помощью AI для разных платформ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targeting"
                ],
                "summary": "Генерировать креативы",
                "parameters": [
                    {
                        "description": "Параметры генерации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api_handlers.GenerateCreativesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сгенерированные креативы для каждой платформы",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка генерации креативов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ws/chat": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Установить WebSocket соединение для real-time общения",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "WebSocket для чата",
                "responses": {
                    "101": {
                        "description": "WebSocket соединение установлено"
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_api_handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.GenerateCreativesRequest": {
            "type": "object",
            "required": [
                "platforms",
                "property_id"
            ],
            "properties": {
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "facebook",
                        "instagram",
                        "google"
                    ]
                },
                "property_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_api_handlers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                }
            }
        },
        "internal_api_handlers.MessageRequest": {
            "type": "object",
            "required": [
                "content",
                "session_id"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Найди мне квартиру в Алматы"
                },
                "session_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_api_handlers.ParsePropertiesRequest": {
            "type": "object"
        },
        "internal_api_handlers.ParseResponseSwagger": {
            "type": "object",
            "properties": {
                "cached": {
                    "type": "boolean",
                    "example": false
                },
                "count": {
                    "type": "integer",
                    "example": 15
                },
                "error": {
                    "type": "string",
                    "example": ""
                },
                "parser_type": {
                    "type": "string",
                    "example": "selenium"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api_handlers.ParsedPropertySwagger"
                    }
                },
                "request_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "status": {
                    "type": "string",
                    "example": "completed"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "internal_api_handlers.ParsedPropertySwagger": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "мкр. Самал-2, 58"
                },
                "area": {
                    "type": "number",
                    "example": 65.5
                },
                "build_year": {
                    "type": "integer",
                    "example": 2018
                },
                "building_type": {
                    "type": "string",
                    "example": "monolith"
                },
                "currency": {
                    "type": "string",
                    "example": "₸"
                },
                "description": {
                    "type": "string",
                    "example": "Просторная 2-комнатная квартира в центре Алматы"
                },
                "floor": {
                    "type": "integer",
                    "example": 7
                },
                "id": {
                    "type": "string",
                    "example": "krisha_12345"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"https://krisha.kz/images/1.jpg\"",
                        "\"https://krisha.kz/images/2.jpg\"]"
                    ]
                },
                "is_new_building": {
                    "type": "boolean",
                    "example": false
                },
                "kitchen_area": {
                    "type": "number",
                    "example": 12.5
                },
                "phone": {
                    "type": "string",
                    "example": "+77001234567"
                },
                "price": {
                    "type": "integer",
                    "example": 25000000
                },
                "residential_complex": {
                    "type": "string",
                    "example": "Алматы Тауэрс"
                },
                "rooms": {
                    "type": "integer",
                    "example": 2
                },
                "seller_type": {
                    "type": "string",
                    "example": "owner"
                },
                "title": {
                    "type": "string",
                    "example": "Продается 2-комнатная квартира"
                },
                "total_floors": {
                    "type": "integer",
                    "example": 16
                },
                "url": {
                    "type": "string",
                    "example": "https://krisha.kz/a/show/12345"
                }
            }
        },
        "internal_api_handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "full_name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                },
                "phone": {
                    "type": "string",
                    "example": "+77001234567"
                }
            }
        },
        "smartestate_internal_models.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.Campaign": {
            "type": "object",
            "properties": {
                "budget": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "creatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.Creative"
                    }
                },
                "duration_days": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metrics": {
                    "$ref": "#/definitions/smartestate_internal_models.CampaignMetrics"
                },
                "name": {
                    "type": "string"
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "property": {
                    "$ref": "#/definitions/smartestate_internal_models.Property"
                },
                "property_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_audience": {
                    "$ref": "#/definitions/smartestate_internal_models.TargetAudience"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/smartestate_internal_models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.CampaignMetrics": {
            "type": "object",
            "properties": {
                "clicks": {
                    "type": "integer"
                },
                "conversions": {
                    "type": "integer"
                },
                "cost_per_click": {
                    "type": "number"
                },
                "cost_per_lead": {
                    "type": "number"
                },
                "ctr": {
                    "type": "number"
                },
                "impressions": {
                    "type": "integer"
                },
                "last_updated": {
                    "type": "string"
                },
                "spend": {
                    "type": "number"
                }
            }
        },
        "smartestate_internal_models.ChatContext": {
            "type": "object",
            "properties": {
                "last_intent": {
                    "type": "string"
                },
                "property_preferences": {
                    "type": "object",
                    "additionalProperties": true
                },
                "search_history": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smartestate_internal_models.ChatMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/smartestate_internal_models.MessageMetadata"
                },
                "role": {
                    "description": "user, assistant, system",
                    "type": "string"
                },
                "session": {
                    "$ref": "#/definitions/smartestate_internal_models.ChatSession"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.ChatSession": {
            "type": "object",
            "properties": {
                "context": {
                    "$ref": "#/definitions/smartestate_internal_models.ChatContext"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.ChatMessage"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/smartestate_internal_models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.Coordinates": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "smartestate_internal_models.Creative": {
            "type": "object",
            "properties": {
                "cta": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "headline": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "media_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "platform": {
                    "type": "string"
                },
                "type": {
                    "description": "image, video, carousel",
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.Features": {
            "type": "object",
            "properties": {
                "amenities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bathrooms": {
                    "type": "integer"
                },
                "bedrooms": {
                    "type": "integer"
                },
                "furnished": {
                    "type": "boolean"
                },
                "has_balcony": {
                    "type": "boolean"
                },
                "has_elevator": {
                    "type": "boolean"
                },
                "has_parking": {
                    "type": "boolean"
                },
                "year_built": {
                    "type": "integer"
                }
            }
        },
        "smartestate_internal_models.MessageMetadata": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "confidence": {
                    "type": "number"
                },
                "extra": {
                    "type": "object",
                    "additionalProperties": true
                },
                "property_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smartestate_internal_models.ParseRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "filters": {
                    "$ref": "#/definitions/smartestate_internal_models.PropertyFilters"
                },
                "id": {
                    "type": "string"
                },
                "max_pages": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.ParsedProperty"
                    }
                },
                "status": {
                    "description": "pending, processing, completed, failed",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.ParsedProperty": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "area": {
                    "type": "number"
                },
                "build_year": {
                    "type": "integer"
                },
                "building_type": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "floor": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_new_building": {
                    "type": "boolean"
                },
                "kitchen_area": {
                    "type": "number"
                },
                "phone": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "residential_complex": {
                    "type": "string"
                },
                "rooms": {
                    "type": "integer"
                },
                "seller_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_floors": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.Property": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/smartestate_internal_models.Address"
                },
                "area_sqm": {
                    "type": "number"
                },
                "coordinates": {
                    "$ref": "#/definitions/smartestate_internal_models.Coordinates"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "features": {
                    "$ref": "#/definitions/smartestate_internal_models.Features"
                },
                "floor": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "price": {
                    "type": "number"
                },
                "property_type": {
                    "type": "string"
                },
                "rooms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_floors": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/smartestate_internal_models.User"
                },
                "user_id": {
                    "type": "string"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.PropertyView"
                    }
                },
                "vr_tour_url": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.PropertyFilters": {
            "type": "object",
            "properties": {
                "build_year_from": {
                    "description": "минимальный год постройки",
                    "type": "integer"
                },
                "build_year_to": {
                    "description": "максимальный год постройки",
                    "type": "integer"
                },
                "city": {
                    "description": "Алматы, Астана, и т.д.",
                    "type": "string"
                },
                "floor_from": {
                    "description": "минимальный этаж",
                    "type": "integer"
                },
                "floor_to": {
                    "description": "максимальный этаж",
                    "type": "integer"
                },
                "has_photos": {
                    "description": "только с фото",
                    "type": "boolean"
                },
                "is_new_building": {
                    "description": "новостройка",
                    "type": "boolean"
                },
                "not_first_floor": {
                    "description": "не первый этаж",
                    "type": "boolean"
                },
                "not_last_floor": {
                    "description": "не последний этаж",
                    "type": "boolean"
                },
                "price_max": {
                    "description": "максимальная цена",
                    "type": "integer"
                },
                "price_min": {
                    "description": "минимальная цена",
                    "type": "integer"
                },
                "property_type": {
                    "description": "apartment, house, commercial",
                    "type": "string"
                },
                "residential_complex": {
                    "description": "жилой комплекс",
                    "type": "string"
                },
                "rooms": {
                    "description": "количество комнат",
                    "type": "integer"
                },
                "seller_type": {
                    "description": "owner, agent, developer",
                    "type": "string"
                },
                "total_area_from": {
                    "description": "минимальная площадь",
                    "type": "integer"
                },
                "total_area_to": {
                    "description": "максимальная площадь",
                    "type": "integer"
                },
                "total_floors_from": {
                    "description": "минимальная этажность дома",
                    "type": "integer"
                },
                "total_floors_to": {
                    "description": "максимальная этажность дома",
                    "type": "integer"
                }
            }
        },
        "smartestate_internal_models.PropertyView": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Duration in seconds",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "property": {
                    "$ref": "#/definitions/smartestate_internal_models.Property"
                },
                "property_id": {
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/smartestate_internal_models.User"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "description": "Can be null for anonymous views",
                    "type": "string"
                },
                "viewed_at": {
                    "type": "string"
                }
            }
        },
        "smartestate_internal_models.TargetAudience": {
            "type": "object",
            "properties": {
                "age_range": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "behaviors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "gender": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "smartestate_internal_models.User": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "campaigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.Campaign"
                    }
                },
                "chat_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.ChatSession"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "\u003c- изменено",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "properties": {
                    "description": "Relationships - remove constraint tags for initial migration",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/smartestate_internal_models.Property"
                    }
                },
                "role": {
                    "type": "string"
                },
                "subscription_tier": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}