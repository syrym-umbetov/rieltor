package main

import (
	"fmt"
	"log"
	"smartestate/internal/services"
)

func main() {
	// –°–æ–∑–¥–∞–µ–º KrishaFilterService
	krishaService := services.NewKrishaFilterService()

	// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å 6 –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
	filters := services.KrishaFilters{
		City:            "almaty",
		Rooms:           "2",
		PriceTo:         "40000000",
		HasPhoto:        false,
		CollectAllPages: true,
		MaxResults:      6, // –¢–µ—Å—Ç —Å 6 –æ–±—ä–µ–∫—Ç–∞–º–∏
		Page:            1,
	}

	fmt.Printf("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–æ—á–µ–∫\n")

	result, err := krishaService.ParseWithFilters(filters)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞: %v", err)
	}

	fmt.Printf("‚úÖ –ù–∞–π–¥–µ–Ω–æ: %d –æ–±—ä–µ–∫—Ç–æ–≤\n", len(result.Properties))

	// –¢–µ—Å—Ç–∏—Ä—É–µ–º AI —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–∏–º–∏—Ç–∏—Ä—É–µ–º)
	fmt.Printf("\nüìã –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫:\n")

	for i := 0; i < len(result.Properties); i += 2 {
		fmt.Printf("| –ö–≤–∞—Ä—Ç–∏—Ä–∞ | –ö–≤–∞—Ä—Ç–∏—Ä–∞ |\n")
		fmt.Printf("|----------|----------|\n")
		fmt.Printf("| ")

		for j := 0; j < 2 && (i+j) < len(result.Properties); j++ {
			prop := result.Properties[i+j]

			cardContent := fmt.Sprintf("**‚òê %d.** ", i+j+1)
			if len(prop.Images) > 0 {
				cardContent += fmt.Sprintf("![üè†](%s)<br>", prop.Images[0])
			}

			title := prop.Title
			if len(title) > 25 {
				title = title[:22] + "..."
			}
			cardContent += fmt.Sprintf("**%s**<br>", title)

			priceFormatted := "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
			if prop.Price > 0 {
				if prop.Price >= 1000000 {
					priceFormatted = fmt.Sprintf("%.0f –º–ª–Ω", float64(prop.Price)/1000000)
				} else {
					priceFormatted = fmt.Sprintf("%d —Ç—ã—Å", prop.Price/1000)
				}
			}
			cardContent += fmt.Sprintf("üí∞ **%s ‚Ç∏** [üîó](link)", priceFormatted)

			fmt.Printf("%s", cardContent)

			if j == 0 && (i+j+1) < len(result.Properties) {
				fmt.Printf(" | ")
			}
		}

		if i+1 >= len(result.Properties) {
			fmt.Printf(" | ")
		}

		fmt.Printf(" |\n\n")
	}

	fmt.Printf("üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ~%d —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É\n", 200) // –ø—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
}