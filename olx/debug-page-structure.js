// debug-page-structure.js - –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã OLX
const https = require('https');

const TEST_URL = 'https://olx.kz/d/obyavlenie/dvuhkomnatnaya-kvartira-IDqgDUJ.html';

async function debugPageStructure() {
    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã OLX...');
    console.log('URL:', TEST_URL);

    try {
        const headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3',
            'Accept-Encoding': 'gzip, deflate, br',
            'Connection': 'keep-alive',
            'Upgrade-Insecure-Requests': '1',
            'Cache-Control': 'no-cache'
        };

        console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OLX...');
        const response = await fetch(TEST_URL, { headers });

        console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);
        console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:');
        for (const [key, value] of response.headers.entries()) {
            console.log(`  ${key}: ${value}`);
        }

        if (!response.ok) {
            console.error('‚ùå –û—à–∏–±–∫–∞ HTTP:', response.status);
            return;
        }

        const html = await response.text();
        console.log('\nüìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ HTML:');
        console.log('  –†–∞–∑–º–µ—Ä:', html.length, '—Å–∏–º–≤–æ–ª–æ–≤');
        console.log('  –°–æ–¥–µ—Ä–∂–∏—Ç title?', html.includes('<title>'));
        console.log('  –°–æ–¥–µ—Ä–∂–∏—Ç JSON-LD?', html.includes('application/ld+json'));

        // –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const titleMatch = html.match(/<title[^>]*>([^<]+)<\/title>/i);
        if (titleMatch) {
            console.log('  Title —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', titleMatch[1]);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        const h1Patterns = [
            /data-cy="ad_title"[^>]*>([^<]+)</,
            /h1[^>]*data-cy="ad_title"[^>]*>([^<]+)<\/h1>/,
            /<h1[^>]*>([^<]+)<\/h1>/,
            /h4[^>]*data-cy="ad_title"[^>]*>([^<]+)<\/h4>/
        ];

        console.log('\nüîç –ü–æ–∏—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:');
        h1Patterns.forEach((pattern, index) => {
            const match = html.match(pattern);
            if (match) {
                console.log(`  –ü–∞—Ç—Ç–µ—Ä–Ω ${index + 1}: "${match[1]}"`);
            }
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ü–µ–Ω—ã
        const pricePatterns = [
            /data-testid="ad-price"[^>]*>([^<]+)</,
            /class="[^"]*price[^"]*"[^>]*>([^<]+)</,
            /—Ç–≥\./g
        ];

        console.log('\nüí∞ –ü–æ–∏—Å–∫ —Ü–µ–Ω—ã:');
        pricePatterns.forEach((pattern, index) => {
            const matches = html.match(pattern);
            if (matches) {
                console.log(`  –ü–∞—Ç—Ç–µ—Ä–Ω ${index + 1}:`, matches.slice(0, 3));
            }
        });

        // –ò—â–µ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        const locationPatterns = [
            /data-testid="location-date"[^>]*>([^<]+)</,
            /–ê–ª–º–∞—Ç—ã[^<]*/g
        ];

        console.log('\nüìç –ü–æ–∏—Å–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:');
        locationPatterns.forEach((pattern, index) => {
            const matches = html.match(pattern);
            if (matches) {
                console.log(`  –ü–∞—Ç—Ç–µ—Ä–Ω ${index + 1}:`, matches.slice(0, 3));
            }
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–ø—á—É
        if (html.includes('captcha') || html.includes('Captcha') || html.includes('robot')) {
            console.log('\nüö´ –í–ù–ò–ú–ê–ù–ò–ï: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–∞–ø—á—É –∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –±–æ—Ç–æ–≤');
        }

        if (html.includes('Nie znaleziono') || html.includes('Not found') || html.includes('404')) {
            console.log('\n‚ùå –í–ù–ò–ú–ê–ù–ò–ï: –û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (404)');
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        const fs = require('fs');
        fs.writeFileSync('./debug-page.html', html);
        console.log('\nüíæ HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ debug-page.html –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    }
}

debugPageStructure();