// test-srcset.js - –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ srcset
async function testSrcsetExtraction() {
    console.log('üñºÔ∏è –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ srcset\n');

    // –ü–∞—É–∑–∞ –¥–ª—è –æ–±—Ö–æ–¥–∞ rate limiting
    console.log('‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥...');
    await new Promise(resolve => setTimeout(resolve, 10000));

    const testFilters = {
        city: 'almaty'
    };

    try {
        console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫...');

        const response = await fetch('http://localhost:3001/api/search-olx', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                filters: testFilters
            })
        });

        if (!response.ok) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ HTTP: ${response.status}`);
            if (response.status === 429) {
                console.error('‚è≥ Rate limit. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ');
            }
            return;
        }

        const data = await response.json();

        if (data.data && data.data.properties) {
            const properties = data.data.properties;
            console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ${properties.length}`);

            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            const withImages = properties.filter(p => p.images.length > 0);
            const highQualityImages = properties.filter(p =>
                p.images.length > 0 &&
                (p.images[0].includes('510x') || p.images[0].includes('800x'))
            );

            console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
            console.log(`   üñºÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: ${withImages.length}/${properties.length}`);
            console.log(`   ‚ú® –° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞: ${highQualityImages.length}/${withImages.length}`);

            if (withImages.length > 0) {
                console.log('\nüéØ –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');

                withImages.slice(0, 5).forEach((property, index) => {
                    console.log(`\n${index + 1}. ${property.title.substring(0, 40)}...`);
                    console.log(`   üí∞ ${property.price}`);
                    console.log(`   üñºÔ∏è ${property.images[0]}`);

                    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    const imageUrl = property.images[0];
                    if (imageUrl.includes('510x') || imageUrl.includes('800x')) {
                        console.log('   ‚úÖ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ');
                    } else if (imageUrl.includes('216x')) {
                        console.log('   ‚ö†Ô∏è –ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ');
                    } else {
                        console.log('   ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ');
                    }
                });

                // –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
                const percentage = Math.round((withImages.length / properties.length) * 100);
                console.log(`\nüìà –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏: ${percentage}% –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–º–µ—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);

                if (percentage > 80) {
                    console.log('üéâ –û—Ç–ª–∏—á–Ω–æ! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–º–µ—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
                } else if (percentage > 50) {
                    console.log('üëç –•–æ—Ä–æ—à–æ! –ü–æ–ª–æ–≤–∏–Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–º–µ—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
                } else {
                    console.log('‚ö†Ô∏è –ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
                }
            } else {
                console.log('\n‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É –∏–∑–≤–ª–µ—á–µ–Ω–∏—è');
            }

        } else {
            console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

testSrcsetExtraction().catch(console.error);