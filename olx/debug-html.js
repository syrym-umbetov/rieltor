// debug-html.js - –û—Ç–ª–∞–¥–∫–∞ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã OLX
const { JSDOM } = require('jsdom');

async function debugOlxHtml() {
    console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞ OLX\n');

    const searchUrl = 'https://www.olx.kz/nedvizhimost/prodazha-kvartiry/alma-ata';

    try {
        console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É:', searchUrl);

        const response = await fetch(searchUrl, {
            headers: {
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36'
            }
        });

        if (!response.ok) {
            console.error(`‚ùå –û—à–∏–±–∫–∞: ${response.status}`);
            return;
        }

        const html = await response.text();
        const dom = new JSDOM(html);
        const document = dom.window.document;

        console.log('‚úÖ HTML –∑–∞–≥—Ä—É–∂–µ–Ω, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É...\n');

        // –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        const possibleSelectors = [
            '[data-cy="l-card"]',
            '[data-testid="l-card"]',
            '.css-1sw7q4x',
            '.listing-ad-card',
            'div[data-cy*="card"]',
            'div[data-testid*="card"]'
        ];

        let listingElements = [];
        let usedSelector = null;

        for (const selector of possibleSelectors) {
            listingElements = Array.from(document.querySelectorAll(selector));
            if (listingElements.length > 0) {
                usedSelector = selector;
                console.log(`üì¶ –ù–∞–π–¥–µ–Ω—ã –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`);
                console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫: ${listingElements.length}\n`);
                break;
            }
        }

        if (listingElements.length === 0) {
            console.log('‚ùå –ö–∞—Ä—Ç–æ—á–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');

            // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            const links = document.querySelectorAll('a[href*="/d/obyavlenie/"]');
            console.log(`üîó –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: ${links.length}`);

            if (links.length > 0) {
                console.log('üìã –ü–µ—Ä–≤—ã–µ 3 —Å—Å—ã–ª–∫–∏:');
                Array.from(links).slice(0, 3).forEach((link, index) => {
                    console.log(`${index + 1}. ${link.getAttribute('href')}`);
                });
            }
            return;
        }

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–æ—á–µ–∫
        console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ä—Ç–æ—á–µ–∫:\n');

        listingElements.slice(0, 3).forEach((element, index) => {
            console.log(`üì¶ –ö–∞—Ä—Ç–æ—á–∫–∞ ${index + 1}:`);
            console.log('HTML:', element.outerHTML.substring(0, 500) + '...\n');

            // –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const images = element.querySelectorAll('img');
            console.log(`üñºÔ∏è –ù–∞–π–¥–µ–Ω–æ img —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${images.length}`);

            images.forEach((img, imgIndex) => {
                console.log(`  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${imgIndex + 1}:`);
                console.log(`    src: ${img.getAttribute('src')}`);
                console.log(`    data-src: ${img.getAttribute('data-src')}`);
                console.log(`    data-srcset: ${img.getAttribute('data-srcset')}`);
                console.log(`    srcset: ${img.getAttribute('srcset')}`);
                console.log(`    class: ${img.getAttribute('class')}`);
                console.log(`    style: ${img.getAttribute('style')}`);
            });

            // –ò—â–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const divsWithBackground = element.querySelectorAll('div[style*="background"]');
            if (divsWithBackground.length > 0) {
                console.log(`üé® –ù–∞–π–¥–µ–Ω–æ div —Å background: ${divsWithBackground.length}`);
                divsWithBackground.forEach((div, divIndex) => {
                    console.log(`  Div ${divIndex + 1}: ${div.getAttribute('style')}`);
                });
            }

            console.log('‚îÄ'.repeat(80));
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON-LD –¥–∞–Ω–Ω—ã–µ
        console.log('\nüìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON-LD –¥–∞–Ω–Ω—ã–µ:');
        const scripts = document.querySelectorAll('script[type="application/ld+json"]');
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ JSON-LD —Å–∫—Ä–∏–ø—Ç–æ–≤: ${scripts.length}`);

        scripts.forEach((script, index) => {
            try {
                const data = JSON.parse(script.textContent);
                if (data['@type'] === 'ItemList' && data.itemListElement) {
                    console.log(`‚úÖ JSON-LD ${index + 1}: ItemList —Å ${data.itemListElement.length} —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏`);

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    if (data.itemListElement[0] && data.itemListElement[0].item) {
                        const item = data.itemListElement[0].item;
                        console.log(`üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ JSON-LD: ${item.image ? (Array.isArray(item.image) ? item.image.length : 1) : 0}`);
                        if (item.image) {
                            const images = Array.isArray(item.image) ? item.image : [item.image];
                            console.log(`üì∏ –ü—Ä–∏–º–µ—Ä—ã URL: ${images.slice(0, 2).join(', ')}`);
                        }
                    }
                } else {
                    console.log(`‚ÑπÔ∏è JSON-LD ${index + 1}: ${data['@type'] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø'}`);
                }
            } catch (error) {
                console.log(`‚ùå JSON-LD ${index + 1}: –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞`);
            }
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error.message);
    }
}

debugOlxHtml().catch(console.error);